<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:syncfusion = "http://schemas.syncfusion.com/wpf"
                    >

    <Style x:Key="NoteTypeCreatePropertyListViewStyle" TargetType="ListView">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="30"/>
                            <ColumnDefinition MinWidth="50"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <CheckBox Grid.Column="0"
                                  Margin="5, 0, 0, 10"
                                  IsChecked="{Binding getset_isSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <TextBox Grid.Column="1"
                                 Text="{Binding getset_nameOfValueContainer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <syncfusion:ComboBoxAdv Grid.Column="2"
                                                Margin="15, 0, 0, 0"
                                                ItemsSource="{Binding get_itemsSourceForTypeComboBox}"
                                                SelectedItem="{Binding getset_enumData, Mode=TwoWay}"
                                                DisplayMemberPath="get_stringRepresentation"/>
                        
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="NoteTypeCreateMultiSelectionHighlightBrush" Color="#FFB7F495"/>

    <!-- TreeViewItem style-->

    <BooleanToVisibilityConverter x:Key = "boolToVisibilityConverter"/>

    <DataTemplate x:Key = "busyIndicatorTemplate">
        <syncfusion:SfBusyIndicator x:Name = "PART_BusyIndicator"
                                    IsBusy = "True"
                                    AnimationType = "DotCircle"
                                    ViewboxWidth = "{TemplateBinding Width}"
                                    VerticalContentAlignment = "Center"
                                    VerticalAlignment = "Center">
        </syncfusion:SfBusyIndicator>
    </DataTemplate>

    <Style x:Key = "NoteTypeCreateSyncfusionNoteTreeViewTreeViewItemStyle" TargetType = "syncfusion:TreeViewItem">
        <Setter Property = "BorderBrush" Value = "{StaticResource DefaultBorderBrush}"/>

        <Setter Property = "Template">
            <Setter.Value>
                <ControlTemplate TargetType = "{x:Type syncfusion:TreeViewItem}">
                    <Grid x:Name = "ROOT">

                        <Grid.Style>
                            <Style TargetType="Grid">

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Content.get_isSelectedAsPartOfType}" Value="True">
                                        <Setter Property="Background" Value = "{StaticResource NoteTypeCreateMultiSelectionHighlightBrush}"/>
                                    </DataTrigger>

                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <!-- <VisualStateManager.VisualStateGroups>

                            <VisualStateGroup x:Name = "DropStates">
                                <VisualState x:Name = "Normal"/>
                                <VisualState x:Name = "DropAsChild">

                                    <Storyboard>

                                        <ObjectAnimationUsingKeyFrames BeginTime = "00:00:00"
                                                                   Duration = "00:00:00"
                                                                   Storyboard.TargetName = "BorderContent"
                                                                   Storyboard.TargetProperty = "Background">
                                            <DiscreteObjectKeyFrame KeyTime = "00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color = "#D2DFF2" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime = "00:00:00"
                                                                   Duration = "00:00:00"
                                                                   Storyboard.TargetName = "BorderContent"
                                                                   Storyboard.TargetProperty = "BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime = "00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color = "#2B579A"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime = "00:00:00"
                                                                   Duration = "00:00:00"
                                                                   Storyboard.TargetName = "BorderContent"
                                                                   Storyboard.TargetProperty = "BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime = "00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>1</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime = "00:00:00"
                                                                   Duration = "00:00:00"
                                                                   Storyboard.TargetName = "PART_ExpanderView"
                                                                   Storyboard.TargetProperty = "Background">
                                            <DiscreteObjectKeyFrame KeyTime = "00:00:00"
                                            Value = "{StaticResource SelectionHighlightBrush}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>

                                </VisualState>

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups> -->

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MaxWidth = "{TemplateBinding IndentationWidth}"/>
                            <ColumnDefinition Width = "Auto"/>
                            <ColumnDefinition Width = "*"/>
                            <ColumnDefinition Width = "Auto"/>
                        </Grid.ColumnDefinitions>

                        <Border x:Name = "BorderContent"  
                                BorderThickness = "{TemplateBinding BorderThickness}"
                                BorderBrush = "{TemplateBinding BorderBrush}"/>

                        <Border x:Name = "PART_HoverBorder" 
                                Visibility = "Collapsed" 
                                Margin = "1"
                                Background = "{TemplateBinding Background}"/>

                        <StackPanel x:Name = "PART_IndentContainer" 
                                    Panel.ZIndex = "0"
                                    Orientation = "Horizontal"
                                    Grid.Column = "0">

                            <Rectangle x:Name = "PART_IndentLine" 
                                       StrokeDashArray = "2,2"
                                       HorizontalAlignment = "Stretch"
                                       Visibility = "Hidden">
                            </Rectangle>

                        </StackPanel>

                        <Grid x:Name = "PART_LineGrid"
                              Grid.Column = "1"
                              Panel.ZIndex = "0"
                              Width = "{TemplateBinding ExpanderWidth}"
                              Visibility = "Hidden"
                              Margin = "0, 0, 0, 0">

                            <Rectangle x:Name = "PART_HorizontalLine" 
                                       StrokeDashArray = "2,2"
                                       Margin = "10,0,0,0"
                                       Width = "10"
                                       VerticalAlignment = "Center"/>

                            <Rectangle x:Name = "PART_VerticalLine" 
                                       StrokeDashArray = "2,2"
                                       HorizontalAlignment = "Stretch"/>

                        </Grid>

                        <ContentControl x:Name = "PART_ExpanderView"
                                        Focusable = "False"
                                        Width = "{TemplateBinding ExpanderWidth}"
                                        Visibility = "{Binding HasChildNodes, Converter = {StaticResource boolToVisibilityConverter}}"
                                        ContentTemplate = "{TemplateBinding ExpanderTemplate}">
                        </ContentControl>

                        <syncfusion:TreeNodeView x:Name = "PART_ContentView" Grid.Column = "2"
                                                 Margin = "4,0,4,0"
                                                 VerticalAlignment = "Center"
                                                 Focusable = "False"
                                                 ContentTemplate = "{TemplateBinding ItemTemplate}">
                        </syncfusion:TreeNodeView>

                        <Border x:Name = "PART_DragLine" 
                                Grid.ColumnSpan = "3"
                                Visibility = "Collapsed"
                                BorderBrush = "{TemplateBinding BorderBrush}"/>

                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property = "FullRowSelect" Value = "True">
                            <Setter Property = "Grid.Column" TargetName = "BorderContent" Value = "0"/>
                            <Setter Property = "Grid.ColumnSpan" TargetName = "BorderContent" Value = "4"/>
                            <Setter Property = "Grid.Column" TargetName = "PART_HoverBorder" Value = "0"/>
                            <Setter Property = "Grid.ColumnSpan" TargetName = "PART_HoverBorder" Value = "4"/>
                        </Trigger>

                        <MultiTrigger>

                            <MultiTrigger.Conditions>
                                <Condition Property = "FullRowSelect" Value = "False"/>
                                <Condition Property = "ExpanderPosition" Value = "Start"/>
                            </MultiTrigger.Conditions>

                            <Setter Property = "Grid.Column" TargetName = "BorderContent" Value = "2"/>
                            <Setter Property = "Grid.ColumnSpan" TargetName = "BorderContent" Value = "1"/>
                            <Setter Property = "Grid.Column" TargetName = "PART_HoverBorder" Value = "2"/>
                            <Setter Property = "Grid.ColumnSpan" TargetName = "PART_HoverBorder" Value = "1"/>
                        </MultiTrigger>

                        <MultiTrigger>

                            <MultiTrigger.Conditions>
                                <Condition Property = "FullRowSelect" Value = "False"/>
                                <Condition Property = "ExpanderPosition" Value = "End"/>
                            </MultiTrigger.Conditions>

                            <Setter Property = "Grid.Column" TargetName = "BorderContent" Value = "0"/>
                            <Setter Property = "Grid.ColumnSpan" TargetName = "BorderContent" Value = "3"/>
                            <Setter Property = "Grid.Column" TargetName = "PART_HoverBorder" Value = "0"/>
                            <Setter Property = "Grid.ColumnSpan" TargetName = "PART_HoverBorder" Value = "3"/>
                        </MultiTrigger>

                        <Trigger Property = "ExpanderPosition" Value = "Start">
                            <Setter Property = "Grid.Column" TargetName = "PART_ExpanderView" Value = "1"/>
                        </Trigger>

                        <Trigger Property = "ExpanderPosition" Value = "End">
                            <Setter Property = "Grid.Column" TargetName = "PART_ExpanderView" Value = "3"/>
                        </Trigger>

                        <Trigger Property = "ShowLines" Value = "True">
                            <Setter Property = "Visibility" TargetName = "PART_LineGrid" Value = "Visible"/>
                        </Trigger>

                        <DataTrigger Binding = "{Binding ShowExpanderAnimation}" Value = "True">
                            <Setter Property = "ContentTemplate" TargetName = "PART_ExpanderView" Value = "{StaticResource busyIndicatorTemplate}"/>
                        </DataTrigger>

                        <Trigger Property = "IsEnabled" Value = "False">
                            <Setter Property = "Opacity" Value = "0.3"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property = "IsMouseOver" Value = "True"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName = "PART_HoverBorder" Property = "Background" Value = "{StaticResource MouseOverBrush}"/>
                            <Setter TargetName = "BorderContent" Property = "BorderBrush" Value = "{StaticResource MouseOverBorderBrush}"/>
                            <Setter TargetName = "PART_HoverBorder" Property = "BorderThickness" Value = "0, 0, 0, 2"/>
                            <Setter TargetName = "PART_HoverBorder" Property = "BorderBrush" Value="{StaticResource MouseOverUnderBrush}"/>

                        </MultiTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>

    </Style>

    <!-- End of TreeViewItem style-->
    
    <!-- ListViewItem Style-->

    <SolidColorBrush x:Key="SelectedListViewItemBrush" Color="Transparent"/>
    
    <LinearGradientBrush x:Key="SelectedListViewItemLeftBorderGradientBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Color = "#3a69f0" Offset = "0"/>
        <GradientStop Color = "#FFFAFBFD" Offset = "1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SelectedListViewItemLeftBorderBrush" Color = "#3a69f0"/>

    <Style x:Key="PropertyListViewListViewItemStyle" TargetType="ListViewItem">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}"
                            Margin="{TemplateBinding Margin}">
                        <ContentPresenter/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="IsSelected" Value="True"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource SelectedListViewItemBrush}"/>

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetProperty="(ListViewItem.BorderThickness)"
                                                            To="3.5, 0, 0, 0" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetProperty="(ListViewItem.BorderThickness)"
                                                            To="0, 0, 0, 0" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- End of ListViewItem Style-->

</ResourceDictionary>